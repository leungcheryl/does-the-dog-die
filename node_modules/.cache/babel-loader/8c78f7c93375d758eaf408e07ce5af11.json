{"ast":null,"code":"import _objectSpread from \"/Users/cheryl/Desktop/cheryl-leung-project-5/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cheryl/Desktop/cheryl-leung-project-5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport DisplayMovie from './DisplayMovie.js';\nimport movieimg from './assets/img-1.jpg';\nimport maindog from './assets/main-dog.png';\nimport movieicon from './assets/movie-icon.png';\n\nconst formatDogDeath = value => {\n  if (value === null) return 'Watch At Your Own Risk';\n  if (value === false) return 'A Dog Doesn\\'t Die';\n  if (value === true) return 'A Dog Dies';\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.setState({\n        userInput: ''\n      });\n      this.componentDidMount();\n    };\n\n    this.handleReset = event => {\n      event.preventDefault();\n      this.setState({\n        allMovies: ['']\n      });\n    };\n\n    this.state = {\n      userInput: '',\n      allMovies: []\n    };\n  }\n\n  componentDidMount() {\n    const movieInput = this.state.userInput;\n    axios.get('https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/search?', {\n      method: 'GET',\n      dataType: 'json',\n      headers: {\n        'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n        Accept: 'application/json'\n      },\n      params: {\n        q: movieInput\n      }\n    }).then(response => {\n      response = response.data.items;\n      const movieNamesArray = [];\n      response.forEach(movie => {\n        movieNamesArray.push({\n          name: movie.name,\n          id: movie.id\n        });\n      });\n      this.setState({\n        allMovies: movieNamesArray\n      });\n      this.getDogStatus();\n      this.getPoster();\n    });\n  }\n\n  getDogStatus() {\n    const allMovies = this.state.allMovies;\n    Promise.all(allMovies.map(async (value, i) => {\n      try {\n        const url = \"https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/media/\".concat(value.id);\n        const result = await axios.get(\"\".concat(url), {\n          method: 'GET',\n          dataType: 'json',\n          headers: {\n            'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n            Accept: 'application/json'\n          }\n        });\n        const newResult = Object.values(result.data.topicItemStats[0]);\n        console.log(newResult);\n        const yes = newResult[0];\n        const no = newResult[1];\n        let dogDies;\n\n        if (yes > no) {\n          dogDies = true;\n        } else if (yes < no) {\n          dogDies = false;\n        } else {\n          dogDies = null;\n        }\n\n        return _objectSpread({}, this.state.allMovies[i], {\n          dogDies: dogDies\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    })).then(result => {\n      this.setState({\n        allMovies: result\n      });\n    });\n  }\n\n  getPoster() {\n    const selectedMovies = this.state.allMovies;\n    console.log(selectedMovies);\n    Promise.all(selectedMovies.map(async (value, i) => {\n      try {\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=8d57b009677e25546dc89ff6368e4fbe&\";\n        const poster = await axios.get(\"\".concat(url), {\n          method: 'GET',\n          dataType: 'jsonp',\n          params: {\n            query: \"\".concat(value.name)\n          }\n        });\n        console.log(poster);\n        const resultPoster = poster.data.results;\n        const moviePoster = resultPoster.map(post => {\n          return post.poster_path;\n        });\n        let posterUrl;\n\n        if (moviePoster[0] === undefined) {\n          posterUrl = \"https://antmovies.tv/uploads/no-poster.png\";\n        } else {\n          posterUrl = \"http://image.tmdb.org/t/p/w500\".concat(moviePoster[0]);\n        }\n\n        return _objectSpread({}, this.state.allMovies[i], {\n          poster: posterUrl\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    })).then(result => {\n      this.setState({\n        allMovies: result\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Safe for Dogs:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Movie Edition\"), React.createElement(\"img\", {\n      src: movieicon,\n      alt: \"Picture of Popcorn, Movie Items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"background-dog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: maindog,\n      alt: \"Dog wearing 3D glasses and holding popcorn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scroll-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Scroll Down To Search a Movie \\u25BC\")), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Type Movie Here\",\n      value: this.state.userInput,\n      name: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Search!\"), React.createElement(\"button\", {\n      type: \"reset\",\n      value: \"Reset\",\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Reset\"))), React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.allMovies.map(movie => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(DisplayMovie, {\n        img: movie.poster,\n        name: movie.name,\n        dogStat: formatDogDeath(movie.dogDies),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cheryl/Desktop/cheryl-leung-project-5/src/App.js"],"names":["React","Component","axios","DisplayMovie","movieimg","maindog","movieicon","formatDogDeath","value","App","constructor","_isMounted","handleChange","event","setState","userInput","target","handleClick","preventDefault","componentDidMount","handleReset","allMovies","state","movieInput","get","method","dataType","headers","Accept","params","q","then","response","data","items","movieNamesArray","forEach","movie","push","name","id","getDogStatus","getPoster","Promise","all","map","i","url","result","newResult","Object","values","topicItemStats","console","log","yes","no","dogDies","err","message","selectedMovies","poster","query","resultPoster","results","moviePoster","post","poster_path","posterUrl","undefined","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport DisplayMovie from './DisplayMovie.js';\nimport movieimg from './assets/img-1.jpg';\nimport maindog from './assets/main-dog.png'\nimport movieicon from './assets/movie-icon.png'\n\n\nconst formatDogDeath = (value) => {\n  if (value === null) return 'Watch At Your Own Risk';\n  if (value === false) return 'A Dog Doesn\\'t Die';\n  if (value === true) return 'A Dog Dies';\n};\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      allMovies: []\n    }\n  }\n  \n  _isMounted = false\n\n  componentDidMount() {\n    const movieInput = this.state.userInput;\n    axios.get(\n        'https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/search?',\n        {\n          method: 'GET',\n          dataType: 'json',\n          headers: {\n            'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n            Accept: 'application/json'\n          },\n          params: {\n            q: movieInput\n          }\n        }).then(response => {\n          response = response.data.items;\n          const movieNamesArray = [];\n          response.forEach(movie => {\n            movieNamesArray.push({\n              name: movie.name,\n              id: movie.id\n            })\n          })\n\n        this.setState({ \n          allMovies: movieNamesArray \n        })\n\n        this.getDogStatus()\n        this.getPoster()\n      })\n  }\n\n  getDogStatus() {\n    const allMovies = this.state.allMovies;\n    Promise.all(allMovies.map(async (value, i) => {\n        try {\n          const url = `https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/media/${value.id}`\n          const result = await axios.get(`${url}`, {\n            method: 'GET',\n            dataType: 'json',\n            headers: {\n              'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n              Accept: 'application/json'\n            }\n          })\n          \n          const newResult = Object.values(result.data.topicItemStats[0]);\n          console.log(newResult)\n          const yes = newResult[0];\n          const no = newResult[1]\n          let dogDies;\n\n          if (yes > no) {\n            dogDies = true;\n          } else if (yes < no) {\n            dogDies = false;\n          } else {\n            dogDies = null;\n          }\n           return {\n             ...this.state.allMovies[i],\n             dogDies: dogDies\n           }\n\n        } catch (err) {\n          console.log(err.message)\n        }\n      })).then(result => {\n        this.setState ({\n          allMovies : result\n        })\n      });\n  }\n\n  getPoster() {\n    \n    const selectedMovies = this.state.allMovies;\n    console.log(selectedMovies)\n    Promise.all(selectedMovies.map(async (value, i) => {\n      try {\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=8d57b009677e25546dc89ff6368e4fbe&`\n       \n        const poster = await axios.get(`${url}`, {\n        method: 'GET',\n        dataType: 'jsonp',\n        params: {\n          query:`${value.name}`\n        }\n        })\n        console.log(poster)\n        const resultPoster = poster.data.results\n        const moviePoster = resultPoster.map(post => {\n          return post.poster_path\n        })\n       \n          let posterUrl;\n\n          if (moviePoster[0] === undefined) {\n            posterUrl = `https://antmovies.tv/uploads/no-poster.png`\n          } else {\n            posterUrl = `http://image.tmdb.org/t/p/w500${moviePoster[0]}`\n          }\n\n          return {\n            ...this.state.allMovies[i],\n            poster: posterUrl\n          }\n\n      } catch (err) {\n        console.log(err)\n      }\n    })).then(result => {\n      this.setState ({\n        allMovies : result\n      })\n    })\n  }\n\n\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value\n    })\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.setState({\n      userInput: ''\n    })\n    this.componentDidMount()\n  }\n\n  handleReset = (event) => {\n    event.preventDefault();\n    this.setState ({\n      allMovies : ['']\n    })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    return (\n    <div className=\"wrapper\">\n\n      <div className=\"main\">\n        <div className=\"header\">\n          <h1>Safe for Dogs:</h1>\n           <h2>Movie Edition</h2>\n          <img src={movieicon} alt=\"Picture of Popcorn, Movie Items\"/>\n        </div>\n        <div className=\"background-dog\">\n          <img src={maindog} alt=\"Dog wearing 3D glasses and holding popcorn\"/>\n        </div>\n      </div>\n      <div className=\"form\">\n        \n        <form>\n          <div className='scroll-note'>\n            <p>Scroll Down To Search a Movie &#9660;</p>\n          </div>\n\n          <input \n            onChange={this.handleChange} \n            type='text' \n            placeholder='Type Movie Here' \n            value={this.state.userInput}\n            name='search' />\n          <button onClick={this.handleClick}>Search!</button>\n          <button type=\"reset\" value=\"Reset\" onClick={this.handleReset}>Reset</button>\n        </form>\n      </div>\n\n      <div className=\"display\">\n        { this.state.allMovies.map(movie => {\n          return (\n            <div>\n              <DisplayMovie \n                img={movie.poster}\n                name={movie.name}  \n                dogStat= {formatDogDeath(movie.dogDies)}\n              />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n    );\n  }\n  \n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}