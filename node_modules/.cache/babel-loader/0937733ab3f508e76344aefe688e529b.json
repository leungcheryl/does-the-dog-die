{"ast":null,"code":"import _objectSpread from \"/Users/cheryl/Desktop/cheryl-leung-project-5/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cheryl/Desktop/cheryl-leung-project-5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst formatDogDeath = value => {\n  if (value === null) return 'Unknown - Watch At Your Own Risk';\n  if (!value) return 'A Dog Doesn\\'t Die';\n  return 'A Dog Dies';\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.setState({\n        userInput: ''\n      });\n      this.componentDidMount();\n    };\n\n    this.state = {\n      userInput: '',\n      allMovies: []\n    };\n  }\n\n  componentDidMount() {\n    const movieInput = this.state.userInput;\n    axios.get('https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/search?', {\n      method: 'GET',\n      dataType: 'json',\n      headers: {\n        'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n        Accept: 'application/json'\n      },\n      params: {\n        q: movieInput\n      }\n    }).then(response => {\n      response = response.data.items; // const ids = response.map(movies => {\n      //   return movies.id\n      // })\n      // this.setState ({\n      //   movieId: ids\n      // })\n      // const movieName = response.map(names => {\n      //   return names.name\n      // })\n      // this.setState({\n      //   movies: movieName\n      // })\n\n      const movieNamesArray = [];\n      response.forEach(movie => {\n        movieNamesArray.push({\n          name: movie.name,\n          id: movie.id\n        });\n      });\n      console.log(movieNamesArray);\n      this.setState({\n        allMovies: movieNamesArray\n      });\n      this.getStats();\n      this.getPoster();\n    });\n  }\n\n  getStats() {\n    const allMovies = this.state.allMovies;\n    Promise.all(allMovies.map(async (value, i) => {\n      try {\n        const url = \"https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/media/\".concat(value.id);\n        const result = await axios.get(\"\".concat(url), {\n          method: 'GET',\n          dataType: 'json',\n          headers: {\n            'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n            Accept: 'application/json'\n          }\n        });\n        const newResult = Object.values(result.data.topicItemStats[0]);\n        const yes = newResult[0];\n        const no = newResult[1];\n        let dogDies;\n\n        if (yes > no) {\n          dogDies = true;\n        } else if (yes < no) {\n          dogDies = false;\n        } else {\n          dogDies = null;\n        }\n\n        return _objectSpread({}, this.state.allMovies[i], {\n          dogDies: dogDies\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    })).then(result => {\n      this.setState({\n        allMovies: result\n      });\n    });\n  }\n\n  getPoster() {\n    const selectedMovies = this.state.allMovies;\n    Promise.all(selectedMovies.map(async (value, i) => {\n      try {\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=8d57b009677e25546dc89ff6368e4fbe&query=\".concat(value.name);\n        const poster = await axios.get(\"\".concat(url), {\n          method: 'GET',\n          dataType: 'jsonp'\n        });\n        const resultPoster = poster.data.results;\n        const moviePoster = resultPoster.map(post => {\n          return post.poster_path;\n        });\n        console.log(moviePoster[0]);\n        const posterUrl = \"http://image.tmdb.org/t/p/w500\".concat(moviePoster[0]);\n        return _objectSpread({}, this.state.allMovies[i], {\n          poster: posterUrl\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    })).then(result => {\n      this.setState({\n        allMovies: result\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Type Movie Here\",\n      value: this.state.userInput,\n      name: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Search!\")), React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.allMovies.map(movie => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: movie.poster,\n        alt: movie.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), movie.name, \" : \", formatDogDeath(movie.dogDies));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cheryl/Desktop/cheryl-leung-project-5/src/App.js"],"names":["React","Component","axios","formatDogDeath","value","App","constructor","_isMounted","handleChange","event","setState","userInput","target","handleClick","preventDefault","componentDidMount","state","allMovies","movieInput","get","method","dataType","headers","Accept","params","q","then","response","data","items","movieNamesArray","forEach","movie","push","name","id","console","log","getStats","getPoster","Promise","all","map","i","url","result","newResult","Object","values","topicItemStats","yes","no","dogDies","err","message","selectedMovies","poster","resultPoster","results","moviePoster","post","poster_path","posterUrl","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst formatDogDeath = (value) => {\n  if (value === null) return 'Unknown - Watch At Your Own Risk';\n  if (!value) return 'A Dog Doesn\\'t Die';\n  return 'A Dog Dies';\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      allMovies: []\n    }\n  }\n  \n  _isMounted = false\n\n  componentDidMount() {\n    const movieInput = this.state.userInput;\n\n      axios.get(\n          'https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/search?',\n          {\n            method: 'GET',\n            dataType: 'json',\n            headers: {\n              'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n              Accept: 'application/json'\n            },\n            params: {\n              q: movieInput\n            }\n          }\n        )\n        .then(response => {\n          response = response.data.items;\n          // const ids = response.map(movies => {\n          //   return movies.id\n          // })\n          \n          // this.setState ({\n          //   movieId: ids\n          // })\n\n          // const movieName = response.map(names => {\n          //   return names.name\n          // })\n          // this.setState({\n          //   movies: movieName\n          // })\n\n          const movieNamesArray = [];\n          response.forEach(movie => {\n            movieNamesArray.push({\n              name: movie.name,\n              id: movie.id\n            })\n          })\n          console.log(movieNamesArray)\n\n          this.setState({ \n            allMovies: movieNamesArray \n          })\n\n          this.getStats()\n          this.getPoster()\n        })\n  }\n\n  getStats() {\n    const allMovies = this.state.allMovies;\n    Promise.all(allMovies.map(async (value, i) => {\n        try {\n          const url = `https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/media/${value.id}`\n          const result = await axios.get(`${url}`, {\n            method: 'GET',\n            dataType: 'json',\n            headers: {\n              'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n              Accept: 'application/json'\n            }\n          })\n         \n          const newResult = Object.values(result.data.topicItemStats[0]);\n          const yes = newResult[0];\n          const no = newResult[1]\n          let dogDies;\n\n          if (yes > no) {\n            dogDies = true;\n          } else if (yes < no) {\n            dogDies = false;\n          } else {\n            dogDies = null;\n          }\n           return {\n             ...this.state.allMovies[i],\n             dogDies: dogDies\n           }\n\n\n        } catch (err) {\n          console.log(err.message)\n        }\n      })).then(result => {\n        this.setState ({\n          allMovies : result\n        })\n      });\n  }\n\n    getPoster() {\n    \n    const selectedMovies = this.state.allMovies;\n\n    Promise.all(selectedMovies.map(async (value, i) => {\n      try {\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=8d57b009677e25546dc89ff6368e4fbe&query=${value.name}`\n        const poster = await axios.get(`${url}`, {\n        method: 'GET',\n        dataType: 'jsonp'\n        })\n        const resultPoster = poster.data.results\n        const moviePoster = resultPoster.map(post => {\n          return post.poster_path\n        })\n        console.log(moviePoster[0])\n\n        const posterUrl = `http://image.tmdb.org/t/p/w500${moviePoster[0]}`\n        return {\n          ...this.state.allMovies[i],\n          poster: posterUrl\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    })).then(result => {\n      this.setState ({\n        allMovies : result\n      })\n    })\n  }\n\n\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value\n    })\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.setState({\n      userInput: ''\n    })\n    this.componentDidMount()\n\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n\n      <form action=\"\">\n        <input \n          onChange={this.handleChange} \n          type='text' \n          placeholder='Type Movie Here' \n          value={this.state.userInput}\n          name='search' />\n        <button onClick={this.handleClick}>Search!</button>\n      </form>\n\n      <div className=\"display\">\n        { this.state.allMovies.map(movie => {\n          return (\n            <div>\n              <img src={movie.poster} alt={movie.name}/>\n              {movie.name} : {formatDogDeath(movie.dogDies)}\n              \n            </div>\n          )\n        })}\n      </div>\n    </div>\n    );\n  }\n  \n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}