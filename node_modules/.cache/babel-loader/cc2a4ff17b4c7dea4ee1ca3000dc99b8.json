{"ast":null,"code":"var _jsxFileName = \"/Users/cheryl/Desktop/cheryl-leung-project-5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.setState({\n        userInput: ''\n      });\n      this.componentDidMount();\n    };\n\n    this.state = {\n      userInput: '',\n      movieId: [],\n      movies: [],\n      stats: [],\n      allMovies: []\n    };\n  }\n\n  componentDidMount() {\n    const movieInput = this.state.userInput;\n    axios.get('https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/search?', {\n      method: 'GET',\n      dataType: 'json',\n      headers: {\n        'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n        Accept: 'application/json'\n      },\n      params: {\n        q: movieInput\n      }\n    }).then(response => {\n      response = response.data.items;\n      console.log(response);\n      const ids = response.map(movies => {\n        return movies.id;\n      });\n      this.setState({\n        movieId: ids\n      });\n      const movieName = response.map(names => {\n        return names.name;\n      });\n      const movieNamesArray = [];\n      response.forEach(movie => {\n        movieNamesArray.push({\n          name: movie.name,\n          id: movie.id\n        });\n      });\n      console.log(movieNamesArray);\n      this.setState({\n        allMovies: movieNamesArray\n      });\n      this.setState({\n        movies: movieName\n      });\n      this.getStats();\n      this.getPoster();\n    });\n  } //Loop over this.state.allMovies. use movie.id for dog dying search parameter. \n  // use movie.name for poster\n\n\n  getStats() {\n    const allMovies = this.state.allMovies;\n    allMovies.map(async value => {\n      try {\n        const url = \"https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/media/\".concat(value.id);\n        const result = await axios.get(\"\".concat(url), {\n          method: 'GET',\n          dataType: 'json',\n          headers: {\n            'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n            Accept: 'application/json'\n          }\n        });\n        const newResult = Object.values(result.data.topicItemStats[0]);\n        console.log(newResult);\n        const yes = newResult[0];\n        const no = newResult[1];\n\n        if (yes > no) {\n          this.setState(prevState => ({\n            stats: [...prevState.stats, 'A Dog Dies']\n          }));\n        } else if (yes < no) {\n          this.setState(prevState => ({\n            stats: [...prevState.stats, 'A Dog Doesnt die']\n          }));\n        } else {\n          this.setState(prevState => ({\n            stats: [...prevState.stats, 'Take a risk']\n          }));\n        }\n\n        const newStatsArray = this.state.stats;\n        console.log(newStatsArray); // newStatsArray.forEach(stat => {\n        //   movieNamesArray.push({\n        //     dogdies: \n        //   })\n        // })\n        // console.log(movieNamesArray)\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }\n\n  getPoster() {\n    const selectedMovie = this.state.movies;\n    const selectedMovies = this.state.allMovies;\n    selectedMovies.forEach(movie => {//movie.name is going to be your search query.\n      // movie.poster = whatever your poster thing is\n    });\n    selectedMovie.map(async select => {\n      try {\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=8d57b009677e25546dc89ff6368e4fbe&query=\".concat(select);\n        const poster = await axios.get(\"\".concat(url), {\n          method: 'GET',\n          dataType: 'jsonp'\n        });\n        const resultPoster = poster.data.results;\n        const moviePoster = resultPoster.map(post => {\n          return post.poster_path;\n        });\n        console.log(moviePoster[0]);\n        const posterUrl = \"http://image.tmdb.org/t/p/w500\".concat(moviePoster[0]);\n        this.setState({\n          posters: posterUrl\n        });\n        console.log(this.state.posters);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Type Movie Here\",\n      value: this.state.userInput,\n      name: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Search!\")), React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.movies.map(movie => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, movie);\n    })), React.createElement(\"div\", {\n      className: \"dog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.stats.map(dog => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, dog);\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cheryl/Desktop/cheryl-leung-project-5/src/App.js"],"names":["React","Component","axios","App","constructor","_isMounted","handleChange","event","setState","userInput","target","value","handleClick","preventDefault","componentDidMount","state","movieId","movies","stats","allMovies","movieInput","get","method","dataType","headers","Accept","params","q","then","response","data","items","console","log","ids","map","id","movieName","names","name","movieNamesArray","forEach","movie","push","getStats","getPoster","url","result","newResult","Object","values","topicItemStats","yes","no","prevState","newStatsArray","err","message","selectedMovie","selectedMovies","select","poster","resultPoster","results","moviePoster","post","poster_path","posterUrl","posters","componentWillUnmount","render","dog"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      movieId: [],\n      movies: [],\n      stats: [],\n      allMovies: []\n    }\n  }\n  \n  _isMounted = false\n\n  componentDidMount() {\n    const movieInput = this.state.userInput;\n\n      axios.get(\n          'https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/search?',\n          {\n            method: 'GET',\n            dataType: 'json',\n            headers: {\n              'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n              Accept: 'application/json'\n            },\n            params: {\n              q: movieInput\n            }\n          }\n        )\n        .then(response => {\n          response = response.data.items\n          console.log(response)\n          const ids = response.map(movies => {\n            return movies.id\n          })\n          \n          this.setState ({\n            movieId: ids\n          })\n\n          const movieName = response.map(names => {\n            return names.name\n          })\n          const movieNamesArray = [];\n          response.forEach(movie => {\n            movieNamesArray.push({\n              name: movie.name,\n              id: movie.id\n            })\n          })\n          console.log(movieNamesArray)\n\n          this.setState({ allMovies: movieNamesArray })\n\n          this.setState ({\n            movies: movieName\n          })\n          this.getStats()\n          this.getPoster()\n        })\n  }\n//Loop over this.state.allMovies. use movie.id for dog dying search parameter. \n// use movie.name for poster\n\n\n  getStats() {\n    const allMovies = this.state.allMovies;\n    allMovies.map(async value => {\n        try {\n          const url = `https://cors-anywhere.herokuapp.com/https://www.doesthedogdie.com/media/${value.id}`\n          const result = await axios.get(`${url}`, {\n            method: 'GET',\n            dataType: 'json',\n            headers: {\n              'X-API-KEY': 'e39ba046c39413e2c04848ae44e80a73',\n              Accept: 'application/json'\n            }\n          })\n         \n          const newResult = Object.values(result.data.topicItemStats[0]);\n          console.log(newResult)\n\n          const yes = newResult[0];\n          const no = newResult[1]\n\n          if (yes > no) {\n            this.setState(prevState => ({\n              stats: [...prevState.stats, 'A Dog Dies'] \n            }))\n\n          } else if (yes < no) {\n            this.setState(prevState => ({\n              stats: [...prevState.stats, 'A Dog Doesnt die']\n            }))\n\n          } else {\n              this.setState(prevState => ({\n                stats: [...prevState.stats, 'Take a risk']\n              }))\n\n          }\n\n          const newStatsArray = this.state.stats\n          console.log(newStatsArray);\n\n          // newStatsArray.forEach(stat => {\n          //   movieNamesArray.push({\n          //     dogdies: \n          //   })\n          // })\n          // console.log(movieNamesArray)\n\n        } catch (err) {\n          console.log(err.message)\n        }\n      })\n  }\n\n    getPoster() {\n    \n    const selectedMovie = this.state.movies\n    const selectedMovies = this.state.allMovies;\n    selectedMovies.forEach(movie => {\n      //movie.name is going to be your search query.\n      // movie.poster = whatever your poster thing is\n    })\n\n    selectedMovie.map(async select => {\n      try {\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=8d57b009677e25546dc89ff6368e4fbe&query=${select}`\n        const poster = await axios.get(`${url}`, {\n        method: 'GET',\n        dataType: 'jsonp'\n        })\n        const resultPoster = poster.data.results\n        const moviePoster = resultPoster.map(post => {\n          return post.poster_path\n        })\n        console.log(moviePoster[0])\n\n        const posterUrl = `http://image.tmdb.org/t/p/w500${moviePoster[0]}`\n\n        this.setState({\n          posters: posterUrl\n        })\n        console.log(this.state.posters)\n\n      } catch (err) {\n        console.log(err)\n      }\n    })\n  }\n\n\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value\n    })\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.setState({\n      userInput: ''\n    })\n    this.componentDidMount()\n\n  }\n\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n\n      <form action=\"\">\n        <input \n          onChange={this.handleChange} \n          type='text' \n          placeholder='Type Movie Here' \n          value={this.state.userInput}\n          name='search' />\n        <button onClick={this.handleClick}>Search!</button>\n      </form>\n\n      <div className=\"display\">\n\n        <div className=\"movie\">\n           { this.state.movies.map( (movie) => {\n            return (\n              <p>{movie}</p>\n            )\n          })}\n        </div>\n\n        <div className=\"dog\">\n          { this.state.stats.map( (dog) => {\n          return (\n            \n            <p>{dog}</p>\n            \n            )\n          })}\n        </div>\n      </div>\n    </div>\n    );\n  }\n  \n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}